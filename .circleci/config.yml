version: 2.1

orbs:
  node: circleci/node@5.1.0
  docker: circleci/docker@2.2.0
  kubernetes: circleci/kubernetes@1.3.1
  helm: circleci/helm@2.0.1

executors:
  node-executor:
    docker:
      - image: cimg/node:20.9.0
  docker-executor:
    docker:
      - image: cimg/base:stable

jobs:
  test:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run linting
          command: npm run lint || echo "No lint script found"
      - run:
          name: Run tests
          command: npm test || echo "No test script found"
      - run:
          name: Check build
          command: npm run build || echo "No build script found"

  build-and-push:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - docker/check:
          docker-username: DOCKER_USERNAME
          docker-password: DOCKER_PASSWORD
      - docker/build:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: << pipeline.git.revision >>
      - docker/push:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: << pipeline.git.revision >>
      - docker/build:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: latest
      - docker/push:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: latest

  deploy-staging:
    executor: kubernetes/default
    steps:
      - checkout
      - kubernetes/install-kubectl
      - helm/install-helm-client:
          version: v3.12.0
      - run:
          name: Configure kubectl
          command: |
            echo $KUBE_CONFIG_DATA | base64 -d > kubeconfig
            export KUBECONFIG=kubeconfig
      - run:
          name: Deploy to staging
          command: |
            export KUBECONFIG=kubeconfig
            helm upgrade --install devops-hilltop-staging ./helm/devops-hilltop \
              --namespace devops-hilltop-staging \
              --create-namespace \
              --set image.tag=<< pipeline.git.revision >> \
              --set ingress.hosts[0].host=staging.devops-hilltop.yourdomain.com \
              --set postgresql.auth.postgresPassword=$POSTGRES_PASSWORD_STAGING \
              --wait --timeout=600s

  deploy-production:
    executor: kubernetes/default
    steps:
      - checkout
      - kubernetes/install-kubectl
      - helm/install-helm-client:
          version: v3.12.0
      - run:
          name: Configure kubectl
          command: |
            echo $KUBE_CONFIG_DATA | base64 -d > kubeconfig
            export KUBECONFIG=kubeconfig
      - run:
          name: Deploy to production
          command: |
            export KUBECONFIG=kubeconfig
            helm upgrade --install devops-hilltop-prod ./helm/devops-hilltop \
              --namespace devops-hilltop-prod \
              --create-namespace \
              --set image.tag=<< pipeline.git.revision >> \
              --set ingress.hosts[0].host=devops-hilltop.yourdomain.com \
              --set postgresql.auth.postgresPassword=$POSTGRES_PASSWORD_PROD \
              --set replicaCount=5 \
              --set resources.requests.cpu=500m \
              --set resources.requests.memory=512Mi \
              --set resources.limits.cpu=1000m \
              --set resources.limits.memory=1Gi \
              --wait --timeout=600s

  security-scan:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Trivy
          command: |
            sudo apt-get update
            sudo apt-get install wget apt-transport-https gnupg lsb-release
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy
      - run:
          name: Build image for scanning
          command: docker build -t devops-hilltop:scan .
      - run:
          name: Scan image for vulnerabilities
          command: |
            trivy image --exit-code 1 --severity HIGH,CRITICAL devops-hilltop:scan

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - security-scan:
          requires:
            - test
      - build-and-push:
          requires:
            - test
            - security-scan
          filters:
            branches:
              only:
                - main
                - develop
      - deploy-staging:
          requires:
            - build-and-push
          filters:
            branches:
              only: develop
      - hold-for-approval:
          type: approval
          requires:
            - build-and-push
          filters:
            branches:
              only: main
      - deploy-production:
          requires:
            - hold-for-approval
          filters:
            branches:
              only: main
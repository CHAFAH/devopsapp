version: 2.1

orbs:
  node: circleci/node@5.1.0
  docker: circleci/docker@2.2.0
  aws-cli: circleci/aws-cli@4.0.0

executors:
  node-executor:
    docker:
      - image: cimg/node:20.9.0
  aws-executor:
    docker:
      - image: cimg/aws:2023.09

jobs:
  test:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Run linting
          command: npm run lint
      - store_test_results:
          path: test-results

  build-and-push:
    executor: node-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - docker/check:
          docker-username: DOCKER_USERNAME
          docker-password: DOCKER_PASSWORD
      - docker/build:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: << pipeline.git.revision >>
      - docker/push:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: << pipeline.git.revision >>
      - docker/build:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: latest
      - docker/push:
          image: $DOCKER_USERNAME/devops-hilltop
          tag: latest

  deploy-staging:
    executor: aws-executor
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: Configure kubectl for EKS
          command: |
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
      - run:
          name: Update Kubernetes manifests with image tag
          command: |
            sed -i "s|image: devops-hilltop:latest|image: $DOCKER_USERNAME/devops-hilltop:<< pipeline.git.revision >>|g" k8s/deployment.yaml
      - run:
          name: Deploy to EKS staging
          command: |
            kubectl apply -f k8s/
            kubectl rollout status deployment/devops-hilltop-deployment -n devops-hilltop --timeout=300s
      - run:
          name: Verify deployment
          command: |
            kubectl get pods -n devops-hilltop
            kubectl get services -n devops-hilltop

  deploy-production:
    executor: aws-executor
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: Configure kubectl for EKS
          command: |
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
      - run:
          name: Update Kubernetes manifests for production
          command: |
            sed -i "s|image: devops-hilltop:latest|image: $DOCKER_USERNAME/devops-hilltop:<< pipeline.git.revision >>|g" k8s/deployment.yaml
            sed -i "s|replicas: 3|replicas: 5|g" k8s/deployment.yaml
      - run:
          name: Deploy to EKS production
          command: |
            kubectl apply -f k8s/
            kubectl rollout status deployment/devops-hilltop-deployment -n devops-hilltop --timeout=600s
      - run:
          name: Verify production deployment
          command: |
            kubectl get pods -n devops-hilltop
            kubectl get services -n devops-hilltop
            NODE_PORT=$(kubectl get service devops-hilltop-service -n devops-hilltop -o jsonpath='{.spec.ports[0].nodePort}')
            echo "Application deployed successfully on NodePort: $NODE_PORT"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
          filters:
            branches:
              only:
                - main
                - develop
      - deploy-staging:
          requires:
            - build-and-push
          filters:
            branches:
              only: develop
      - hold-for-approval:
          type: approval
          requires:
            - build-and-push
          filters:
            branches:
              only: main
      - deploy-production:
          requires:
            - hold-for-approval
          filters:
            branches:
              only: main